plugins {
    id 'java'
    id 'maven-publish'
}

sourceCompatibility = javaSourceCompatibility

jar {
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': version
    }
}

dependencies {
    compileClasspath project(':func-core')
    compileClasspath project(':func-anym')
    compileClasspath project(':func-futurestream')
    compileClasspath project(':func-reactive-collection')
    compileClasspath "io.kindedj:kindedj:${kindedJVersion}"
    compileClasspath group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJava2Version
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    testCompileClasspath project(':func-anym')
    testCompileClasspath project(':func-core')
    testCompileClasspath project(':func-reactive-collection')
    testCompileClasspath project(':func-futurestream')
    testCompileClasspath "io.projectreactor:reactor-core:${reactorVersion}"
    testCompileClasspath 'commons-io:commons-io:2.4'
    testCompileClasspath group: 'junit', name: 'junit', version: '4.12'
    testCompileClasspath group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompileClasspath group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompileClasspath 'org.reactivestreams:reactive-streams-tck:1.0.0'
    testCompileClasspath group: 'io.reactivex.rxjava2', name: 'rxjava', version: rxJava2Version
    testCompileClasspath 'org.assertj:assertj-core:3.2.0'
    testCompileClasspath 'com.github.stefanbirkner:system-rules:1.10.0'
    testCompileClasspath(group: 'org.hibernate', name: 'hibernate-core', version: '5.1.0.Final')
    testCompileClasspath(group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.1.0.Final')
}

test {
    systemProperties 'property': 'value'
    forkEvery = 1
    //maxParallelForks = Runtime.runtime.availableProcessors()
    testLogging {
        events "started", "passed", "skipped", "failed"//, "standardOut", "standardError"
    }
}
